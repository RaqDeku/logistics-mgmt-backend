name: Build and Deploy App

on:
  push:
    branches: ['develop', 'main']
  pull_request:
    branches: ['develop']

jobs:
  # -------------------------
  # Build & Deploy for DEVELOP (Render + Docker Hub)
  # -------------------------
  build-develop:
    if: github.ref == 'refs/heads/develop'
    name: Build (Develop)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: capton007/backend-logistics:dev

      - name: Push to Docker Hub
        run: |
          docker login -u capton007 -p ${{ secrets.DOCKER_TOKEN }}
          docker push capton007/backend-logistics:dev
          docker logout

  deploy-develop:
    if: github.ref == 'refs/heads/develop'
    needs: build-develop
    name: Deploy (Develop to Render)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Trigger deployment on Render
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"

  # -------------------------
  # Build & Deploy for MAIN (cPanel SSH)
  # -------------------------
  build-main:
    if: github.ref == 'refs/heads/main'
    name: Build (Main)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build NestJS app
        run: npm run build

      - name: Prepare deployment package
        run: |
          mkdir deploy
          cp -r dist package.json package-lock.json deploy/
          cd deploy
          tar -czf ../deploy.tar.gz .

      - name: Upload to cPanel
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USER }}
          key: ${{ secrets.CPANEL_SSH_KEY }}
          source: 'deploy.tar.gz'
          target: '~/repositories/logistics-mgmt-backend'

  deploy-main:
    if: github.ref == 'refs/heads/main'
    needs: build-main
    name: Deploy (Main to cPanel)
    runs-on: ubuntu-latest

    steps:
      - name: Extract & Install on cPanel
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USER }}
          key: ${{ secrets.CPANEL_SSH_KEY }}
          script: |
            cd ~/repositories/logistics-mgmt-backend
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            npm install --omit=dev
            touch tmp/restart.txt   # Restart Passenger app
